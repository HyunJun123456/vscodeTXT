ec2 서버 -t2.micro 서버
- 프리티어 사용자들(가입한지 1년이 안된)
- 750시간 무료 (한달)
- 1일 24시간
- 30일 720시간
- 32일 744시간

ec2 서버 - t2.micro 서버 2대 1488시간

고정 IP (엘라스틱 IP)
유동 IP

프리티어
- 탄력적 IP 하나 무료 제공
조건: EC2 - 탄력적 IP
연결을 했을 때
탄력적 IP 생성
- 사용안함 (비용 발생)
- 2개생성(비용 발생)
- EC2서버종료(시점부터 비용발생)

1. 자바 설치 (JDK, JRE)
sudo apt update
sudo apt install openjdk-11-jdk
- JDK로 마인크래프트 게임 개발
- 일반 사용자들이 마인크래프트 게임 하려면 JRE가 필요!!

2. 깃허브 다운받기
git clone 주소

3. gradlew 실행권한주기
cd ~/aws-v1
chmod u+x gradlew

4. gradlew로 프로젝트를 jar파일로 변경하기
./gradlew build
./ -> 현재폴더

5. java로 jar를 실행(X)
cd build/libs
java -jar *.jar

nohub 명령어는 리눅스에서 프로세스를 실행한 터미널의 세션 연결이 끊어지더라도
지속적으로 동작 할 수 있게 해주는 명령어

우리가 포그라운드로 실행했기 때문!! - nohup으로 했다고 하더라도 터미널 종료시에 함께 종료!!
우리는 백그라운드로 실행해야 한다.

nohub은 자동으로 로그를 남긴다. nohup.out

6. nohup으로 실행(O)
[1. 에러 출력 - 2 - nohup.out]
[2. 표준 출력 - 1 - nohup.out]

nohup java -jar 파일명 1>log.out 2>err.out &
이유: 배포를 위해서 작성했던 모든 명령어들 - 스크립트 작성!! - 자동화

7. 시간 변경(+9시간)
- 우분투 OS에 시간 세팅

timedatectl 명령어
timedatectl list-timezones
sudo timedatectl set-timezone Asia/Seoul

8. pid 찾기
ps -ef | grep *.jar | grep -v grep | awk '{print$2}'

pgrep -f *.jar

$변수 -> 변수의 값을 출력 혹은 실행
$(명령어) -> 명령어의 결과를 리턴

spring-stop.sh -> 실행권한을 줌
스크립트 짜기
-----------------------------------------------
echo "Springboot Stop....."
SPRING_PID=$(pgrep -f v1-0.0.1-SNAPSHOT.jar)
echo $SPRING_PID
kill -9 $SPRING_PID
-----------------------------------------------
./spring-stop.sh


- 부하, 에러 (서버가 종료)
- 서버가 종료됐다는 로그를 남기는데!!
nohup 2>err.log

자동 재시작이 되지 않음. - 직접 재시작!!
자동 재시작을 하는 방법!!
1 - cron 개념과 실습
- 주기적 실행 명령어

crontab -e
분(0-59) 시간(0-23) 일(1-31) 월(1-12) 요일(0-7)

2 - cron을 이용해서 종료된 스프링 서버를 재시작(자동으로)

9. 재배포 스크립트 짜기
if 문 조건 옵션
[-z]: 문자열의 길이가 0이면 참
[-n]: 문자열의 길이가 0이 아니면 참
[-eq]: 값이 같으면 참
[-ne]: 값이 다르면 참
[-gt]: 값1>값2
[-ge]: 값1>=값2
[-lt]: 값1<값2
[-le]: 값1<=값2
[-a]: &&연산과 동일 and 연산
[-o]: ||연산과 동일 xor 연산
[-d]: 파일이 디렉토리면 참
[-e]: 파일이 있으면 참
[-L]: 파일이 심볼릭 링크면 참
[-r]: 파일이 읽기 가능하면 참
[-s]: 파일의 크기가 0보다 크면 참
[-w]: 파일이 쓰기 가능하면 참
[-x]: 파일이 실행 가능하면 참


# 1. 배포 프로세스
echo "deploy start...기존 서버가 시작되고 있다면 종료를 하고 배포를 시작해야함"
echo "1. JDK install - x"
echo "2. github project download - o"
echo "3. gradlew 실행권한 주기 - o"
echo "4. project build 하기 - o"
echo "5. ubuntu timezone setting 하기 - x"
echo "6. nohup으로 springboot 실행시키기 - o"

# 2. 스프링서버 종료시 재시작
echo "crontab 등록 - spring restart..."
crontab -l > crontab_new
echo "* * * * * /home/ubuntu/cron-restart/spring-restart.sh" 1>>crontab_new
crontab crontab_new
rm crontab_new






